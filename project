import mysql.connector
import re
from telebot import TeleBot
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, Message, CallbackQuery
from telebot.storage import StateMemoryStorage
from telebot.handler_backends import State, StatesGroup
from telebot import custom_filters

from config import *


state_storage = StateMemoryStorage()

bot = TeleBot(token=TOKEN, state_storage=state_storage, parse_mode="HTML")

chat_ids = []
texts = {}

class Support(StatesGroup):
    text = State()
    respond = State()
    agahi = State()

######################################################################################################

def escape_special_characters(text):
    special_characters = r"([\*\_\[\]\(\)\~\`\>\#\+\-\=\|\{\}\.\!])"
    return re.sub(special_characters, r'\\\1', text)

def check_join(user, channels):

    for i in channels:
        is_member = bot.get_chat_member(chat_id=i, user_id=user)

        if is_member.status in ['kicked', 'left']:
            return False
    
    return True


def user_balance(user):

    sql = f"SELECT balance FROM users WHERE id = {user}"

    with mysql.connector.connect(**db_config) as connection:
        with connection.cursor() as cursor:
            cursor.execute(sql)
            result = cursor.fetchone()

    return result

######################################################################################################
["start"]
@bot.message_handler(commands=['start'])
def start(m):
    with mysql.connector.connect(**db_config) as connection:
        with connection.cursor() as cursor:
            sql = f"SELECT lang FROM users WHERE id = {m.from_user.id}"
            cursor.execute(sql)
            result = cursor.fetchone()

            if result is None:
                token = m.text.split()
                if len(token) > 1:
                    sql = f"UPDATE users SET balance = balance + 10000 WHERE id = {token[1]}"
                    cursor.execute(sql)
                    connection.commit()

                sql = f"INSERT INTO users(id) VALUES ({m.from_user.id})"
                cursor.execute(sql)
                connection.commit()

                markup = InlineKeyboardMarkup(row_width=1)
                button = InlineKeyboardButton(text="🇬🇧 English", callback_data="eng")
                button_2 = InlineKeyboardButton(text="🇮🇷 فارسی", callback_data="per")
                markup.add(button, button_2)

                bot.send_message(chat_id=m.chat.id, text="""لطفا زبان موردنظرتان را انتخاب کنید.

Please choose your preferred language.""", reply_markup=markup)

            else:
                if result[0] == "per":
                    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                    markup.add("💠 ثبت آگهی")
                    markup.add("👤 حساب کاربری", "💵 شارژ حساب", "🎰 زیرمجموعه گیری", "☎️ پشتیبانی")

                    bot.send_message(chat_id=m.chat.id, text=f"""سلام <b>{m.from_user.first_name}</b>، به <b>ثبت آگهی</b> خوش آمدید 💫

👈🏻 با این ربات میتونید آگهی های خود را به طور خودکار در کانال ... ثبت کنید.
تغییر زبان: /language

برای ادامه کار یک بخش را انتخاب کنید:""", reply_markup=markup)
                    
                else:

                    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                    markup.add("💠 Submit ADS")
                    markup.add("👤 My account", "💵 Add funds", "🎰 Referral", "☎️ Support")
                    
                    bot.send_message(chat_id=m.chat.id, text=f"""Hello <b>{m.from_user.first_name}</b>, welcome to <b>ADS registration bot</b> 💫

We are at your service with <b>ADS registration</b> to submit your ADS to ... channel automatically.
Change language: /language

Select a section to continue:""", reply_markup=markup)

######################################################################################################

@bot.message_handler(commands=['language'])
def change_lang(m):
    markup = InlineKeyboardMarkup(row_width=1)
    button = InlineKeyboardButton(text="🇬🇧 English", callback_data="eng")
    button_2 = InlineKeyboardButton(text="🇮🇷 فارسی", callback_data="per")
    markup.add(button, button_2)

    bot.send_message(chat_id=m.chat.id, text="""لطفا زبان موردنظرتان را انتخاب کنید.

Please choose your preferred language.""", reply_markup=markup)

######################################################################################################

@bot.message_handler(func= lambda m: m.text == "💠 ثبت آگهی")
def get_agahi(m: Message):
    
    bot.send_message(chat_id=m.chat.id, text="خب حالا آگهی خودتو بفرست")
    bot.set_state(user_id=m.from_user.id, state=Support.agahi, chat_id=m.chat.id)

@bot.message_handler(state=Support.agahi, content_types=['photo'])
def get_agahi_2(m: Message):
    markup = InlineKeyboardMarkup()
    button_1 = InlineKeyboardButton(text="رد کردن", callback_data="deny")
    button_2 = InlineKeyboardButton(text="تایید کردن", callback_data="confirm")
    markup.add(button_1, button_2)
    
    forwarded_m = bot.forward_message(chat_id=admins[0], from_chat_id=m.chat.id, message_id=m.message_id)
    
    bot.send_message(chat_id=admins[0], text=f"این کاربر میخواد اگهی بزاره\n\nآیدی کاربر: {m.from_user.id}", reply_markup=markup, reply_to_message_id=forwarded_m.message_id)
    
    bot.send_message(chat_id=m.chat.id, text="آگهی شما تا ساعاتی دیگر تایید یا رد میشود")
    bot.delete_state(user_id=m.from_user.id, chat_id=m.chat.id)
    
@bot.callback_query_handler(func= lambda call: call.data == "deny")
def deny(call: CallbackQuery):

    pattern = r"آیدی کاربر: \d+"
    user = re.findall(pattern=pattern, string=call.message.text)[0].split()[2]
    
    markup = InlineKeyboardMarkup()
    button = InlineKeyboardButton(text="با موفقیت رد شد", callback_data="skdfhksjh")
    markup.add(button)
    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=markup)
    
    bot.send_message(chat_id=int(user), text="درخواست شما رد شد")
    
@bot.callback_query_handler(func= lambda call: call.data == "confirm")
def confirm(call: CallbackQuery):
    pattern = r"آیدی کاربر: \d+"
    user = re.findall(pattern=pattern, string=call.message.text)[0].split()[2]
    
    bot.copy_message(
        chat_id=-1001937741204,
        from_chat_id=call.message.chat.id,
        message_id=call.message.reply_to_message.message_id
    )
    
    markup = InlineKeyboardMarkup()
    button = InlineKeyboardButton(text="با موفقیت تایید شد", callback_data="ksgfjksds")
    markup.add(button)
    bot.edit_message_reply_markup(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        reply_markup=markup
    )
    
    bot.send_message(chat_id=int(user), text="آگهی شما ثبت شد")



######################################################################################################

@bot.message_handler(func= lambda m: m.text == "👤 حساب کاربری")
def account(m):
    balance = user_balance(user=m.from_user.id)

    bot.send_message(chat_id=m.chat.id, text=f"""📊 اطلاعات حساب کاربری شما:

👤 نام کاربری : <a href='tg://user?id={m.from_user.id}'>{m.from_user.first_name}</a>
🪪 شناسه کاربری : <code>{m.from_user.id}</code>
💰 موجودی : {balance[0]} تومان""", parse_mode="HTML")

######################################################################################################

@bot.message_handler(func= lambda m: m.text == "🎰 زیرمجموعه گیری")
def referral(m):
    with open("Parand Wallpapers 50 (1116).jpg", "rb") as photo:
        bot.send_photo(m.chat.id, photo=photo, caption=f"""این لینک رفرال شما هست:
                       
https://t.me/CodingLovers_bot?start={m.from_user.id}""")


######################################################################################################

@bot.message_handler(func= lambda m: m.text == "☎️ پشتیبانی")
def sup(m):
    bot.send_message(chat_id=m.chat.id, text="لطفا پیام خود را ارسال کنید:")

    bot.set_state(user_id=m.from_user.id, state=Support.text, chat_id=m.chat.id)


@bot.message_handler(state=Support.text)
def sup_text(m):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text="پاسخ", callback_data=m.from_user.id))

    bot.send_message(chat_id=1520470730, text=f"Recived a message from <code>{m.from_user.id}</code> with username @{m.from_user.username}:\nMessage text:\n\n<b>{escape_special_characters(m.text)}</b>", reply_markup=markup, parse_mode="HTML")

    bot.send_message(chat_id=m.chat.id, text="Your message was sent!")

    texts[m.from_user.id] = m.text

    bot.delete_state(user_id=m.from_user.id, chat_id=m.chat.id)


@bot.message_handler(state=Support.respond)
def answer_text(m):
    chat_id = chat_ids[-1]

    if chat_id in texts:
        bot.send_message(chat_id=chat_id, text=f"Your message:\n<i>{escape_special_characters(texts[chat_id])}</i>\n\nSupport answer:\n<b>{escape_special_characters(m.text)}</b>", parse_mode="HTML")
        bot.send_message(chat_id=m.chat.id, text="Your answer was sent!")

        del texts[chat_id]
        chat_ids.remove(chat_id)
    else:
        bot.send_message(chat_id=m.chat.id, text="Something went wrong. Please try again...")

    bot.delete_state(user_id=m.from_user.id, chat_id=m.chat.id)

######################################################################################################

@bot.callback_query_handler(func= lambda call: call.data == "eng")
def english(call: CallbackQuery):
    
    with mysql.connector.connect(**db_config) as connection:
        with connection.cursor() as cursor:
            sql = f"UPDATE users SET lang = 'eng' WHERE id = {call.from_user.id}"
            cursor.execute(sql)
            connection.commit()

    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    markup.add("💠 Submit ADS")
    markup.add("👤 My account", "💵 Add funds", "🎰 Referral", "☎️ Support")
    
    bot.send_message(chat_id=call.message.chat.id, text=f"""Hello <b>{call.from_user.first_name}</b>, welcome to <b>ADS registration bot</b> 💫

We are at your service with <b>ADS registration</b> to submit your ADS to ... channel automatically.
Change language: /language

Select a section to continue:""", parse_mode="HTML", reply_markup=markup)

######################################################################################################

@bot.callback_query_handler(func= lambda call: call.data == "per")
def persian(call):
    with mysql.connector.connect(**db_config) as connection:
        with connection.cursor() as cursor:
            sql = f"UPDATE users SET lang = 'per' WHERE id = {call.from_user.id}"
            cursor.execute(sql)
            connection.commit()

    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    markup.add("💠 ثبت آگهی")
    markup.add("👤 حساب کاربری", "💵 شارژ حساب", "🎰 زیرمجموعه گیری", "☎️ پشتیبانی")
    
    bot.send_message(chat_id=call.message.chat.id, text=f"""سلام <b>{call.from_user.first_name}</b>، به <b>ثبت آگهی</b> خوش آمدید 💫

👈🏻 با این ربات میتونید آگهی های خود را به طور خودکار در کانال ... ثبت کنید.
تغییر زبان: /language

برای ادامه کار یک بخش را انتخاب کنید:""", parse_mode="HTML", reply_markup=markup)

######################################################################################################

# @bot.callback_query_handler(func= lambda call: True)
# def answer(call):
#     bot.send_message(chat_id=call.message.chat.id, text=f"Send your answer to <code>{call.data}</code>:", parse_mode="HTML")

#     chat_ids.append(int(call.data))

#     bot.set_state(user_id=call.from_user.id, state=Support.respond, chat_id=call.message.chat.id)

######################################################################################################

@bot.message_handler(func= lambda m: m.text == "💵 شارژ حساب")
def charge_account(m):
    markup = InlineKeyboardMarkup()
    button_1 = InlineKeyboardButton(text="10 هزار", callback_data="stat")
    markup.add(button_1)
    bot.send_message(m.chat.id, text="مقدار شارژ خود را انتخاب کنید:", reply_markup=markup)

@bot.callback_query_handler(func= lambda call: call.data == "stat")
def ten_thousands(call):
    markup = InlineKeyboardMarkup()
    button = InlineKeyboardButton(text="پرداخت", url=f"https://codinglovers.ir/zarinpal/request/?User={call.from_user.id}")
    markup.add(button)
    bot.send_message(call.message.chat.id, text="خب از این لینک پرداخت بفرما", reply_markup=markup)

# @bot.callback_query_handler(func= lambda call: call.data == "20")

######################################################################################################

if __name__ == '__main__':

    bot.add_custom_filter(custom_filters.StateFilter(bot))

    bot.polling()
